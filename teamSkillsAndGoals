Team Cheesy
Roos de Bildt Frontend
Maud de Vries Backend

INDEX: 
Programming Skills
Learning Goals
Favorite issues to work on



Programming Skills

Skill Level 1
a I understand and can explain the difference between data types (strings, booleans, integers)
b I have heard of the MVC (Model View Controller) pattern
c I am comfortable creating and deleting files from the command line

Maud: Yes on abc
Roos: 

Skill Level 2
a I am confident writing a simple method in ruby
b I am familiar with the concept of TDD and can explain what it stands for
c I am able to write a counter that loops through numbers (e.g. from one to ten)

Maud: Yes at a, c (simple methods with or without loops)   
      A bit at b  


Skill Level 3
a I am comfortable solving a merge conflict in git.
b I am confident with the vocabulary to use when looking up a solution to a computing problem.
c I feel confident explaining the components of MVC (and their roles)
d I understand what an HTTP status code is
e I have written a unit test before

Maud  a Merge conflict: No, uncomfortable with git and github 
      b YEs, (if I know the problem; and otherwise I will find someone who knows)
      c Sure. And I build an iPhone app based on this. 
      d Yes
      e No
      

Skill Level 4
a I have written a script to automate a task before
b I have already contributed original code to an Open Source project
c I can explain the difference between public, protected and private methods
d I am familiar with more than one testing tool

Maud : a Yes, but not lately 
      b : no, I am afraid I am not good enough a programmer to do that. (I read questions on StackOverflow, but if I know An answer,  I am not confident enough to post my solutions)
      c : definitively public and private, I would go and double check on protected 
      d : no. 


Skill Level 5
I have heard of and used Procs in my code before
I feel confident doing test-driven development in my projects
I have gotten used to refactoring code


Learning Goals

Maud: 
1) Feel confident in the Rails Framework including some important Gems
2) Learn how to work together with Frontend developer in the same project (who does what and where) ;
and learn how to implement Frontend elements in existing Rails project (like how to add a CSS)
3) Getting comfortable with git and github (push, pull, merge, branche, fork) pref from the terminal;
getting more comfortable with contributing to (open source) projects in GitHub. 
4) Learn when and how to do TDD (or BDD?)
5) Learn basics of mySQL and Progres (as far as relevant to building Rails apps)
6) Get an overview on what I need to work on next to get a job as a junior developer
7) Added bonus: learn how to combine Rails and Ajax; implementing Rails for mobile apps

Roos
1) Learn how to integrate back-end in the front-end
2) Learn more about JavaScript and applying it
3) Learn how to work together with several people on one project (with Git)
4) Learn the basics of Ruby
5) Develop myself my practical front-end skills on a real project

Favorite features in Rails App project

1) https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/60 Dashboard
Maud: this looks like a perfect match for a frontend/backend team !

2) https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/184 (DRY up user fields) : 
Maud: I love clean code. I even love decluttering code

3) https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/7 Add tests to make sure only admins can add :supervisor/:organizer roles 
Maud: I like to learn about authorisations

4) https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/136 
Maud: not sure if I do understand this, but looks like a nice pair with #3


@Roos: Isn't this a real nice Frontend thingy: https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/108
And this one: https://github.com/rails-girls-summer-of-code/rgsoc-teams/issues/35 




